warning: in the working copy of '.gitignore', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'website/docusaurus.config.ts', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'website/package-lock.json', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'website/package.json', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'website/src/components/QuickerActionInstallButton/index.tsx', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'website/src/css/custom.css', LF will be replaced by CRLF the next time Git touches it
[1mdiff --git a/.gitignore b/.gitignore[m
[1mindex e9b8224..1bdad98 100644[m
[1m--- a/.gitignore[m
[1m+++ b/.gitignore[m
[36m@@ -18,3 +18,5 @@[m [menv/[m
 .DS_Store[m
 Thumbs.db[m
 [m
[32m+[m[32mwebsite/docs/clip1[m
[32m+[m[32m.vercel[m
[1mdiff --git a/website/docs/clip/README.md b/website/docs/clip/README.md[m
[1mdeleted file mode 100644[m
[1mindex 633cca3..0000000[m
[1m--- a/website/docs/clip/README.md[m
[1m+++ /dev/null[m
[36m@@ -1,14 +0,0 @@[m
[31m----[m
[31m-sidebar_position: 1[m
[31m----[m
[31m-[m
[31m-# 剪贴板软件介绍[m
[31m-[m
[31m-## ✨ 主要功能[m
[31m-[m
[31m-- 全面记录：自动保存剪贴板中的文本、文件、图片等多种数据[m
[31m-- 高度自定义：可调整窗口背景、字体颜色等，打造个性化界面[m
[31m-- 智能粘贴：针对不同软件优化粘贴方式，使用更顺手[m
[31m-- 收藏功能：常用文本一键收藏，快速调用[m
[31m-- 极速响应：精心优化的启动流程，无延迟唤出界面[m
[31m-[m
[1mdiff --git a/website/docs/start/_category_.json b/website/docs/start/_category_.json[m
[1mdeleted file mode 100644[m
[1mindex 73dec47..0000000[m
[1m--- a/website/docs/start/_category_.json[m
[1m+++ /dev/null[m
[36m@@ -1,7 +0,0 @@[m
[31m-{[m
[31m-  "label": "Start",[m
[31m-  "position": 1,[m
[31m-  "collapsed": false[m
[31m-}[m
[31m-[m
[31m-[m
[1mdiff --git a/website/docs/start/getting-start.mdx b/website/docs/start/getting-start.mdx[m
[1mdeleted file mode 100644[m
[1mindex 721f4f5..0000000[m
[1m--- a/website/docs/start/getting-start.mdx[m
[1m+++ /dev/null[m
[36m@@ -1,32 +0,0 @@[m
[31m----[m
[31m-sidebar_position: 1[m
[31m-title: Getting Start[m
[31m----[m
[31m-[m
[31m-> 开始使用 Quicker 剪贴板前，你只需要完成安装与基本设置。下面带你在数分钟内上手。[m
[31m-[m
[31m-## 安装[m
[31m-[m
[31m-1. 下载并解压安装包。[m
[31m-2. 按照安装向导完成安装。[m
[31m-3. 首次启动后，会在系统托盘常驻。[m
[31m-[m
[31m-## 启动与唤出[m
[31m-[m
[31m-- 默认支持通过热键唤出主界面（你可以在偏好设置中修改）。[m
[31m-- 首次唤出会创建必要的本地数据目录。[m
[31m-[m
[31m-## 快速上手[m
[31m-[m
[31m-1. 复制任意文本/图片/文件路径。[m
[31m-2. 打开 Quicker 剪贴板界面。[m
[31m-3. 在“历史”中找到刚刚的内容，试试搜索、收藏与粘贴。[m
[31m-[m
[31m-## 常见问题[m
[31m-[m
[31m-- 看不到界面？检查是否被最小化到托盘，或热键冲突。[m
[31m-- 没有记录？确保复制操作来自系统剪贴板，且应用有权限访问。[m
[31m-[m
[31m-如需更完整的引导，可前往 `clip/快速开始` 与 `使用指南` 部分继续阅读。[m
[31m-[m
[31m-[m
[1mdiff --git a/website/docusaurus.config.ts b/website/docusaurus.config.ts[m
[1mindex 6aad87e..de846a6 100644[m
[1m--- a/website/docusaurus.config.ts[m
[1m+++ b/website/docusaurus.config.ts[m
[36m@@ -42,10 +42,12 @@[m [mconst config: Config = {[m
       {[m
         docs: {[m
           sidebarPath: './sidebars.ts',[m
[32m+[m[32m          // Exclude the raw archive from docs sidebar/build[m
[32m+[m[32m          exclude: ['**/raw/**'],[m
           // Please change this to your repo.[m
           // Remove this to remove the "edit this page" links.[m
           editUrl:[m
[31m-            'https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/',[m
[32m+[m[32m            'https://github.com/ceastld/clip_wiki/edit/main/website/',[m
         },[m
         blog: {[m
           showReadingTime: true,[m
[36m@@ -56,7 +58,7 @@[m [mconst config: Config = {[m
           // Please change this to your repo.[m
           // Remove this to remove the "edit this page" links.[m
           editUrl:[m
[31m-            'https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/',[m
[32m+[m[32m            'https://github.com/ceastld/clip_wiki/edit/main/website/',[m
           // Useful options to enforce blogging best practices[m
           onInlineTags: 'warn',[m
           onInlineAuthors: 'warn',[m
[1mdiff --git a/website/package-lock.json b/website/package-lock.json[m
[1mindex 8e4111e..f857a1f 100644[m
[1m--- a/website/package-lock.json[m
[1m+++ b/website/package-lock.json[m
[36m@@ -14,7 +14,9 @@[m
         "clsx": "^2.0.0",[m
         "prism-react-renderer": "^2.3.0",[m
         "react": "^19.0.0",[m
[31m-        "react-dom": "^19.0.0"[m
[32m+[m[32m        "react-dom": "^19.0.0",[m
[32m+[m[32m        "react-image": "^4.1.0",[m
[32m+[m[32m        "react-modal-image": "^2.6.0"[m
       },[m
       "devDependencies": {[m
         "@docusaurus/module-type-aliases": "3.8.1",[m
[36m@@ -14575,6 +14577,17 @@[m
         "react-dom": "^16.6.0 || ^17.0.0 || ^18.0.0 || ^19.0.0"[m
       }[m
     },[m
[32m+[m[32m    "node_modules/react-image": {[m
[32m+[m[32m      "version": "4.1.0",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/react-image/-/react-image-4.1.0.tgz",[m
[32m+[m[32m      "integrity": "sha512-qwPNlelQe9Zy14K2pGWSwoL+vHsAwmJKS6gkotekDgRpcnRuzXNap00GfibD3eEPYu3WCPlyIUUNzcyHOrLHjw==",[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "peerDependencies": {[m
[32m+[m[32m        "@babel/runtime": ">=7",[m
[32m+[m[32m        "react": ">=16.8",[m
[32m+[m[32m        "react-dom": ">=16.8"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
     "node_modules/react-is": {[m
       "version": "16.13.1",[m
       "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz",[m
[36m@@ -14622,6 +14635,12 @@[m
         "webpack": ">=4.41.1 || 5.x"[m
       }[m
     },[m
[32m+[m[32m    "node_modules/react-modal-image": {[m
[32m+[m[32m      "version": "2.6.0",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/react-modal-image/-/react-modal-image-2.6.0.tgz",[m
[32m+[m[32m      "integrity": "sha512-NNc1xPKzFAn0VsNMdJ8NXt6c54aL/z0fcoYmw9qn4SBUONdGl+8LOQ0sTfo0wtdzcjLiby/ncloHcAL+UI+wIA==",[m
[32m+[m[32m      "license": "MIT"[m
[32m+[m[32m    },[m
     "node_modules/react-router": {[m
       "version": "5.3.4",[m
       "resolved": "https://registry.npmjs.org/react-router/-/react-router-5.3.4.tgz",[m
[1mdiff --git a/website/package.json b/website/package.json[m
[1mindex c6f20eb..c49925a 100644[m
[1m--- a/website/package.json[m
[1m+++ b/website/package.json[m
[36m@@ -21,7 +21,9 @@[m
     "clsx": "^2.0.0",[m
     "prism-react-renderer": "^2.3.0",[m
     "react": "^19.0.0",[m
[31m-    "react-dom": "^19.0.0"[m
[32m+[m[32m    "react-dom": "^19.0.0",[m
[32m+[m[32m    "react-image": "^4.1.0",[m
[32m+[m[32m    "react-modal-image": "^2.6.0"[m
   },[m
   "devDependencies": {[m
     "@docusaurus/module-type-aliases": "3.8.1",[m
[1mdiff --git a/website/src/components/QuickerActionInstallButton/index.tsx b/website/src/components/QuickerActionInstallButton/index.tsx[m
[1mindex 790c297..41b74af 100644[m
[1m--- a/website/src/components/QuickerActionInstallButton/index.tsx[m
[1m+++ b/website/src/components/QuickerActionInstallButton/index.tsx[m
[36m@@ -1,71 +1,295 @@[m
[31m-import React, { useEffect, useState } from 'react';[m
[32m+[m[32mimport React, {useCallback, useEffect, useMemo, useState} from 'react';[m
 import clsx from 'clsx';[m
 import styles from './styles.module.css';[m
 [m
 export type QuickerActionInstallButtonProps = {[m
[31m-  /** Action identifier (code in shared links). */[m
[31m-  actionId: string;[m
[32m+[m[32m  /** Quicker shared action URL. If not provided, will be derived from actionId. */[m
[32m+[m[32m  url?: string;[m
[32m+[m[32m  /** Action identifier (equal to code in shared links). */[m
[32m+[m[32m  actionId?: string;[m
[32m+[m[32m  /** Optional explicit title to display; if omitted, the component will try to fetch it from the page */[m
[32m+[m[32m  title?: string;[m
[32m+[m[32m  /** Optional explicit icon URL; if omitted, the component will try to fetch it from the page */[m
[32m+[m[32m  iconUrl?: string;[m
[32m+[m[32m  /** Whether to attempt fetching metadata from the target URL (default: true) */[m
[32m+[m[32m  fetchMeta?: boolean;[m
   /** Optional extra class name for the root */[m
   className?: string;[m
 };[m
 [m
[32m+[m[32mtype FetchedMeta = {[m
[32m+[m[32m  title?: string;[m
[32m+[m[32m  iconUrl?: string;[m
[32m+[m[32m  description?: string;[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mfunction pickTitleFromActionInfo(data: Record<string, unknown>): string | undefined {[m
[32m+[m[32m  const direct = data['title'];[m
[32m+[m[32m  if (typeof direct === 'string' && direct.trim()) return direct.trim();[m
[32m+[m[32m  const candidates = ['name', 'actionName', 'displayName', 'Name', 'ActionName', 'DisplayName'];[m
[32m+[m[32m  for (const key of candidates) {[m
[32m+[m[32m    const val = data[key];[m
[32m+[m[32m    if (typeof val === 'string' && val.trim().length > 0) return val.trim();[m
[32m+[m[32m  }[m
[32m+[m[32m  return undefined;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction isLikelyImageUrl(s: string): boolean {[m
[32m+[m[32m  return /\.(png|jpe?g|gif|webp|svg)(\?.*)?$/i.test(s) || /image/.test(s);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction absolutizeMaybe(urlOrPath: string, baseUrl: string): string {[m
[32m+[m[32m  try {[m
[32m+[m[32m    const abs = new URL(urlOrPath, baseUrl);[m
[32m+[m[32m    return abs.toString();[m
[32m+[m[32m  } catch {[m
[32m+[m[32m    return urlOrPath;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction pickIconFromActionInfo(data: Record<string, unknown>, baseUrl: string): string | undefined {[m
[32m+[m[32m  const direct = data['icon'];[m
[32m+[m[32m  if (typeof direct === 'string' && direct.trim()) {[m
[32m+[m[32m    return absolutizeMaybe(direct.trim(), baseUrl);[m
[32m+[m[32m  }[m
[32m+[m[32m  const candidates = ['iconUrl', 'image', 'imageUrl', 'logo', 'logoUrl', 'cover', 'coverImage', 'thumbnail', 'thumb', 'Icon', 'IconUrl', 'Image', 'ImageUrl'];[m
[32m+[m[32m  for (const key of candidates) {[m
[32m+[m[32m    const val = data[key];[m
[32m+[m[32m    if (typeof val === 'string' && val.trim().length > 0) {[m
[32m+[m[32m      const v = val.trim();[m
[32m+[m[32m      if (/^https?:\/\//i.test(v) || v.startsWith('/') || isLikelyImageUrl(v)) {[m
[32m+[m[32m        return absolutizeMaybe(v, baseUrl);[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m[32m  }[m
[32m+[m[32m  return undefined;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mfunction pickDescriptionFromActionInfo(data: Record<string, unknown>): string | undefined {[m
[32m+[m[32m  const direct = data['description'];[m
[32m+[m[32m  if (typeof direct === 'string' && direct.trim()) return direct.trim();[m
[32m+[m[32m  return undefined;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32masync function extractActionIdFromSharedUrl(targetUrl: string): Promise<string | undefined> {[m
[32m+[m[32m  try {[m
[32m+[m[32m    // Strip optional leading marker like '@' and whitespaces[m
[32m+[m[32m    const normalized = targetUrl.trim().replace(/^@+/, '');[m
[32m+[m[32m    const u = new URL(normalized);[m
[32m+[m[32m    const idFromCode = u.searchParams.get('code');[m
[32m+[m[32m    if (idFromCode && idFromCode.trim()) return idFromCode.trim();[m
[32m+[m[32m    const id = u.searchParams.get('id');[m
[32m+[m[32m    if (id && id.trim()) return id.trim();[m
[32m+[m[32m  } catch {[m
[32m+[m[32m    // ignore[m
[32m+[m[32m  }[m
[32m+[m[32m  return undefined;[m
[32m+[m[32m}[m
[32m+[m
 type ActionInfo = {[m
[32m+[m[32m  id?: string;[m
   title?: string;[m
[32m+[m[32m  description?: string;[m
[32m+[m[32m  createUserSerial?: number;[m
[32m+[m[32m  createUserNickName?: string;[m
   icon?: string;[m
[32m+[m[32m  exeFile?: string;[m
[32m+[m[32m  revision?: number;[m
[32m+[m[32m  lastUpdateTimeUtc?: string;[m
[32m+[m[32m  changeLog?: string;[m
[32m+[m[32m  createTimeUtc?: string;[m
[32m+[m[32m  userCount?: number;[m
[32m+[m[32m  voteCount?: number;[m
[32m+[m[32m  [k: string]: unknown;[m
 };[m
 [m
[31m-async function fetchActionInfoById(id: string): Promise<ActionInfo | undefined> {[m
[31m-  const apiUrl = `https://getquicker.net/open/api/actions/getactioninfo?id=${encodeURIComponent(id)}`;[m
[32m+[m[32masync function fetchActionInfoById(id: string, signal?: AbortSignal): Promise<ActionInfo | undefined> {[m
[32m+[m[32m  const localProxyUrl = `/api/quicker?id=${encodeURIComponent(id)}`;[m
   try {[m
[31m-    const res = await fetch(apiUrl, { headers: { Accept: 'application/json' } });[m
[31m-    if (!res.ok) return undefined;[m
[31m-    return (await res.json()) as ActionInfo;[m
[32m+[m[32m    console.log('[QuickerAction] fetch via local proxy start', { id, localProxyUrl });[m
[32m+[m[32m    const r = await fetch(localProxyUrl, {[m
[32m+[m[32m      method: 'GET',[m
[32m+[m[32m      headers: { Accept: 'application/json, text/plain, */*' },[m
[32m+[m[32m      signal,[m
[32m+[m[32m    });[m
[32m+[m[32m    if (!r.ok) {[m
[32m+[m[32m      console.warn('[QuickerAction] local proxy non-OK', { id, status: r.status, statusText: r.statusText });[m
[32m+[m[32m      return undefined;[m
[32m+[m[32m    }[m
[32m+[m[32m    try {[m
[32m+[m[32m      const json = (await r.json()) as ActionInfo;[m
[32m+[m[32m      console.log('[QuickerAction] local proxy success (json)', { id, hasTitle: !!json?.title, hasIcon: !!json?.icon });[m
[32m+[m[32m      return json;[m
[32m+[m[32m    } catch {[m
[32m+[m[32m      const text = await r.text();[m
[32m+[m[32m      try {[m
[32m+[m[32m        const parsed = JSON.parse(text) as ActionInfo;[m
[32m+[m[32m        console.log('[QuickerAction] local proxy success (text->json)', { id, hasTitle: !!parsed?.title, hasIcon: !!parsed?.icon });[m
[32m+[m[32m        return parsed;[m
[32m+[m[32m      } catch {[m
[32m+[m[32m        console.error('[QuickerAction] local proxy parse failed', { id });[m
[32m+[m[32m        return undefined;[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
   } catch {[m
[32m+[m[32m    console.error('[QuickerAction] local proxy error', { id });[m
     return undefined;[m
   }[m
 }[m
 [m
[31m-const QuickerActionInstallButton: React.FC<QuickerActionInstallButtonProps> = ({ actionId, className }) => {[m
[31m-  const [title, setTitle] = useState<string>('Quicker 动作');[m
[31m-  const [iconUrl, setIconUrl] = useState<string | undefined>(undefined);[m
[32m+[m[32mconst QuickerActionInstallButton: React.FC<QuickerActionInstallButtonProps> = ({[m
[32m+[m[32m  url,[m
[32m+[m[32m  actionId,[m
[32m+[m[32m  title,[m
[32m+[m[32m  iconUrl,[m
[32m+[m[32m  fetchMeta = true,[m
[32m+[m[32m  className,[m
[32m+[m[32m}) => {[m
[32m+[m[32m  const [meta, setMeta] = useState<FetchedMeta>({});[m
[32m+[m[32m  const [isCopying, setIsCopying] = useState<boolean>(false);[m
[32m+[m[32m  const [toastVisible, setToastVisible] = useState<boolean>(false);[m
 [m
[31m-  const linkHref = `https://getquicker.net/sharedaction?code=${encodeURIComponent(actionId)}`;[m
[32m+[m[32m  const finalTitle = title ?? meta.title ?? 'Quicker 动作';[m
[32m+[m[32m  const finalIconUrl = iconUrl ?? meta.iconUrl;[m
[32m+[m[32m  const linkHref = useMemo(() => {[m
[32m+[m[32m    if (url && url.trim().length > 0) {[m
[32m+[m[32m      const normalized = url.trim().replace(/^@+/, '');[m
[32m+[m[32m      return normalized;[m
[32m+[m[32m    }[m
[32m+[m[32m    const id = (actionId ?? '').trim();[m
[32m+[m[32m    if (id) {[m
[32m+[m[32m      // Use sharedaction link for consistency[m
[32m+[m[32m      return `https://getquicker.net/sharedaction?code=${encodeURIComponent(id)}`;[m
[32m+[m[32m    }[m
[32m+[m[32m    return '#';[m
[32m+[m[32m  }, [url, actionId]);[m
 [m
   useEffect(() => {[m
     let isMounted = true;[m
[31m-    (async () => {[m
[31m-      if (!actionId) return;[m
[31m-      const info = await fetchActionInfoById(actionId);[m
[31m-      if (!isMounted || !info) return;[m
[31m-      if (info.title && info.title.trim()) setTitle(info.title.trim());[m
[31m-      if (info.icon && info.icon.trim()) setIconUrl(info.icon.trim());[m
[31m-    })();[m
[32m+[m[32m    const controller = new AbortController();[m
[32m+[m
[32m+[m[32m    async function loadMeta(): Promise<void> {[m
[32m+[m[32m      if (!fetchMeta) return;[m
[32m+[m[32m      try {[m
[32m+[m[32m        // Only use API to fetch metadata[m
[32m+[m[32m        let resolvedId = (actionId ?? '').trim();[m
[32m+[m[32m        if (!resolvedId) {[m
[32m+[m[32m          const idFromUrl = await extractActionIdFromSharedUrl(linkHref);[m
[32m+[m[32m          if (idFromUrl) resolvedId = idFromUrl;[m
[32m+[m[32m        }[m
[32m+[m[32m        if (!resolvedId) {[m
[32m+[m[32m          console.warn('[QuickerAction] no actionId resolved', { actionIdProp: actionId, linkHref });[m
[32m+[m[32m        } else {[m
[32m+[m[32m          console.log('[QuickerAction] resolved actionId', { resolvedId, actionIdProp: actionId, linkHref });[m
[32m+[m[32m        }[m
[32m+[m[32m        if (resolvedId) {[m
[32m+[m[32m          const info = await fetchActionInfoById(resolvedId, controller.signal);[m
[32m+[m[32m          if (info && isMounted) {[m
[32m+[m[32m            const next: FetchedMeta = {[m
[32m+[m[32m              // Prefer API-defined fields, then safe fallbacks[m
[32m+[m[32m              title: (info.title && String(info.title)) || pickTitleFromActionInfo(info) || undefined,[m
[32m+[m[32m              iconUrl: (info.icon && absolutizeMaybe(String(info.icon), 'https://getquicker.net'))[m
[32m+[m[32m                || pickIconFromActionInfo(info, 'https://getquicker.net')[m
[32m+[m[32m                || undefined,[m
[32m+[m[32m              description: pickDescriptionFromActionInfo(info) ?? info.description ?? undefined,[m
[32m+[m[32m            };[m
[32m+[m[32m            console.log('[QuickerAction] set fetched meta', { title: next.title, iconUrl: next.iconUrl, hasDescription: !!next.description });[m
[32m+[m[32m            setMeta(next);[m
[32m+[m[32m          }[m
[32m+[m[32m        }[m
[32m+[m[32m      } catch {[m
[32m+[m[32m        // Silently ignore network/CORS errors; leave fallbacks[m
[32m+[m[32m      }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Only run on client[m
[32m+[m[32m    if (typeof window !== 'undefined') {[m
[32m+[m[32m      loadMeta();[m
[32m+[m[32m    }[m
     return () => {[m
       isMounted = false;[m
[32m+[m[32m      controller.abort();[m
     };[m
[31m-  }, [actionId]);[m
[32m+[m[32m  }, [linkHref, actionId, fetchMeta]);[m
[32m+[m
[32m+[m[32m  const handleCopy = useCallback(async (e: React.MouseEvent) => {[m
[32m+[m[32m    e.preventDefault();[m
[32m+[m[32m    e.stopPropagation();[m
[32m+[m[32m    try {[m
[32m+[m[32m      if (navigator.clipboard && typeof navigator.clipboard.writeText === 'function') {[m
[32m+[m[32m        await navigator.clipboard.writeText(linkHref);[m
[32m+[m[32m      } else {[m
[32m+[m[32m        // Fallback: create a temporary textarea[m
[32m+[m[32m        const textarea = document.createElement('textarea');[m
[32m+[m[32m        textarea.value = linkHref;[m
[32m+[m[32m        textarea.style.position = 'fixed';[m
[32m+[m[32m        textarea.style.opacity = '0';[m
[32m+[m[32m        document.body.appendChild(textarea);[m
[32m+[m[32m        textarea.focus();[m
[32m+[m[32m        textarea.select();[m
[32m+[m[32m        document.execCommand('copy');[m
[32m+[m[32m        document.body.removeChild(textarea);[m
[32m+[m[32m      }[m
[32m+[m[32m      setIsCopying(true);[m
[32m+[m[32m      setTimeout(() => setIsCopying(false), 1200);[m
[32m+[m[32m      setToastVisible(true);[m
[32m+[m[32m      setTimeout(() => setToastVisible(false), 2200);[m
[32m+[m[32m    } catch {[m
[32m+[m[32m      // noop[m
[32m+[m[32m    }[m
[32m+[m[32m  }, [linkHref]);[m
[32m+[m
[32m+[m[32m  const icon = useMemo(() => {[m
[32m+[m[32m    if (finalIconUrl) {[m
[32m+[m[32m      return ([m
[32m+[m[32m        <img[m
[32m+[m[32m          src={finalIconUrl}[m
[32m+[m[32m          alt={finalTitle || 'action icon'}[m
[32m+[m[32m          className={styles.icon}[m
[32m+[m[32m          loading="lazy"[m
[32m+[m[32m        />[m
[32m+[m[32m      );[m
[32m+[m[32m    }[m
[32m+[m[32m    return ([m
[32m+[m[32m      <div className={clsx(styles.icon, styles.iconFallback)} aria-hidden>[m
[32m+[m[32m        <span>⚡</span>[m
[32m+[m[32m      </div>[m
[32m+[m[32m    );[m
[32m+[m[32m  }, [finalIconUrl]);[m
 [m
   return ([m
[31m-    <a[m
[31m-      className={clsx(styles.root, className)}[m
[31m-      href={linkHref}[m
[31m-      target="_blank"[m
[31m-      rel="noopener noreferrer"[m
[31m-      title={title}[m
[31m-    >[m
[31m-      <div className={styles.left}>[m
[31m-        {iconUrl ? ([m
[31m-          <img src={iconUrl} alt="action icon" className={styles.icon} loading="lazy" />[m
[31m-        ) : ([m
[31m-          <div className={clsx(styles.icon, styles.iconFallback)} aria-hidden>[m
[31m-            <span>⚡</span>[m
[32m+[m[32m    <>[m
[32m+[m[32m      <a[m
[32m+[m[32m        className={clsx(styles.root, className)}[m
[32m+[m[32m        href={linkHref}[m
[32m+[m[32m        target="_blank"[m
[32m+[m[32m        rel="noopener noreferrer"[m
[32m+[m[32m        title={finalTitle}[m
[32m+[m[32m      >[m
[32m+[m[32m        <div className={styles.left}>{icon}</div>[m
[32m+[m[32m        <div className={styles.center}>[m
[32m+[m[32m          <div className={styles.title}>[m
[32m+[m[32m            {finalTitle}[m
           </div>[m
[31m-        )}[m
[31m-      </div>[m
[31m-      <div className={styles.center}>[m
[31m-        <div className={styles.title}>{title}</div>[m
[31m-      </div>[m
[31m-    </a>[m
[32m+[m[32m          <div className={styles.subtitle}>点击打开动作页面</div>[m
[32m+[m[32m        </div>[m
[32m+[m[32m        <div className={styles.right}>[m
[32m+[m[32m          <button[m
[32m+[m[32m            type="button"[m
[32m+[m[32m            className={styles.copyBtn}[m
[32m+[m[32m            onClick={handleCopy}[m
[32m+[m[32m            aria-label="复制动作链接到剪贴板"[m
[32m+[m[32m          >[m
[32m+[m[32m            {isCopying ? '已复制' : '复制链接'}[m
[32m+[m[32m          </button>[m
[32m+[m[32m        </div>[m
[32m+[m[32m      </a>[m
[32m+[m[32m      {toastVisible && ([m
[32m+[m[32m        <div className={styles.toast} role="status" aria-live="polite">[m
[32m+[m[32m          已复制到剪贴板，请在Quicker面板的空白按钮上点右键粘贴。[m
[32m+[m[32m        </div>[m
[32m+[m[32m      )}[m
[32m+[m[32m    </>[m
   );[m
 };[m
 [m
[1mdiff --git a/website/src/css/custom.css b/website/src/css/custom.css[m
[1mindex 2bc6a4c..8df34a9 100644[m
[1m--- a/website/src/css/custom.css[m
[1m+++ b/website/src/css/custom.css[m
[36m@@ -28,3 +28,106 @@[m
   --ifm-color-primary-lightest: #4fddbf;[m
   --docusaurus-highlighted-code-line-bg: rgba(0, 0, 0, 0.3);[m
 }[m
[32m+[m
[32m+[m[32m/* MDX document image styles */[m
[32m+[m[32m.markdown img {[m
[32m+[m[32m  max-width: 100%;[m
[32m+[m[32m  height: auto;[m
[32m+[m[32m  border-radius: 8px;[m
[32m+[m[32m  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);[m
[32m+[m[32m  margin-bottom: 16px;[m
[32m+[m[32m  transition: box-shadow 0.2s ease;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.markdown img:hover {[m
[32m+[m[32m  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/* Hide react-modal-image titlebar to prevent image obstruction */[m
[32m+[m[32m.react-modal-image__modal {[m
[32m+[m[32m  background-color: rgba(0, 0, 0, 0.9) !important;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.react-modal-image__modal-header {[m
[32m+[m[32m  display: none !important;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.react-modal-image__modal-title {[m
[32m+[m[32m  display: none !important;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.react-modal-image__modal-close {[m
[32m+[m[32m  position: fixed !important;[m
[32m+[m[32m  top: 20px !important;[m
[32m+[m[32m  right: 20px !important;[m
[32m+[m[32m  z-index: 1001 !important;[m
[32m+[m[32m  background: rgba(0, 0, 0, 0.5) !important;[m
[32m+[m[32m  border-radius: 50% !important;[m
[32m+[m[32m  width: 40px !important;[m
[32m+[m[32m  height: 40px !important;[m
[32m+[m[32m  display: flex !important;[m
[32m+[m[32m  align-items: center !important;[m
[32m+[m[32m  justify-content: center !important;[m
[32m+[m[32m  color: white !important;[m
[32m+[m[32m  font-size: 20px !important;[m
[32m+[m[32m  border: none !important;[m
[32m+[m[32m  cursor: pointer !important;[m
[32m+[m[32m  transition: background-color 0.2s ease !important;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.react-modal-image__modal-close:hover {[m
[32m+[m[32m  background: rgba(0, 0, 0, 0.7) !important;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.react-modal-image__modal-content {[m
[32m+[m[32m  padding: 0 !important;[m
[32m+[m[32m  margin: 0 !important;[m
[32m+[m[32m  display: flex !important;[m
[32m+[m[32m  align-items: center !important;[m
[32m+[m[32m  justify-content: center !important;[m
[32m+[m[32m  height: 100vh !important;[m
[32m+[m[32m  width: 100vw !important;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.react-modal-image__modal-image {[m
[32m+[m[32m  max-width: 90vw !important;[m
[32m+[m[32m  max-height: 90vh !important;[m
[32m+[m[32m  object-fit: contain !important;[m
[32m+[m[32m  border-radius: 8px !important;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/* Responsive layout for image and text side by side */[m
[32m+[m[32m.responsive-layout {[m
[32m+[m[32m  display: flex;[m
[32m+[m[32m  gap: 2rem;[m
[32m+[m[32m  align-items: flex-start;[m
[32m+[m[32m  margin-bottom: 2rem;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.responsive-layout .image-container {[m
[32m+[m[32m  flex: 0 0 auto;[m
[32m+[m[32m  min-width: 300px;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.responsive-layout .text-container {[m
[32m+[m[32m  flex: 1 1 auto;[m
[32m+[m[32m  min-width: 0;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m/* Mobile responsive */[m
[32m+[m[32m@media (max-width: 768px) {[m
[32m+[m[32m  .responsive-layout {[m
[32m+[m[32m    flex-direction: column;[m
[32m+[m[32m    align-items: center;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  .responsive-layout .image-container {[m
[32m+[m[32m    min-width: auto;[m
[32m+[m[32m    width: 100%;[m
[32m+[m[32m    max-width: 500px;[m
[32m+[m[32m  }[m
[32m+[m[41m  [m
[32m+[m[32m  .responsive-layout .text-container {[m
[32m+[m[32m    width: 100%;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
